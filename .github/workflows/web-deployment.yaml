name: dash-web-deploy

on:
  push:
    branches: [web-reader-v1]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: benjlevesque/short-sha@v2.1
        id: short-sha
        with:
          length: 7
      - run: echo $SHA
        env:
          SHA: ${{ steps.short-sha.outputs.sha }}
      - name: Login to ACR
        uses: docker/login-action@v2
        with:
          registry: dashtoon.azurecr.io
          username: ${{ secrets.AZURE_CLIENT_ID }}
          password: ${{ secrets.AZURE_CLIENT_SECRET }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Create npmrc file
        run: echo ${GHA_PAT} | sed -e 's/;/\n/g' > .npmrc
        env:
          GHA_PAT: ${{secrets.GHA_PAT}}
      - name: Build and push
        uses: docker/build-push-action@v3.3.1
        with:
          context: .
          file: Dockerfile
          push: true
          tags: dashtoon.azurecr.io/dash-web:${{ env.SHA }}

  deploy:
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: benjlevesque/short-sha@v2.1
        id: short-sha
        with:
          length: 7
      - run: echo $SHA
        env:
          SHA: ${{ steps.short-sha.outputs.sha }}
      - uses: Azure/k8s-artifact-substitute@v1
        name: Replace image version
        id: replace-version
        with:
          manifests: kubernetes/manifest.yaml
          images: 'dashtoon.azurecr.io/dash-web:${{ env.SHA }}'
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: '${{ secrets.AZURE_CREDENTIALS }}'
      - name: Set the Kubernetes context
        uses: azure/aks-set-context@v3
        with:
          resource-group: rg-k8s-cen
          cluster-name: k8s-cen
        id: login
      - name: Deploy to dev
        uses: azure/k8s-deploy@v4
        with:
          resource-group: rg-k8s-cen
          name: k8s-cen
          action: deploy
          strategy: basic
          private-cluster: true
          namespace: dev
          manifests: ${{ steps.replace-version.outputs.directory }}/manifest.yaml
      - name: Post to a Slack channel
        id: slack-dev
        uses: slackapi/slack-github-action@v1.23.0
        with:
          channel-id: '${{ secrets.DEPLOYMENT_CHANNEL_ID }}'
          slack-message: "Deploying web reader to dev : ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      - name: Deploy to prod
        if: ${{ contains(github.event.head_commit.message, '#deploy-to-prod') }}
        uses: azure/k8s-deploy@v4
        with:
          resource-group: rg-k8s-cen
          name: k8s-cen
          action: deploy
          strategy: basic
          private-cluster: true
          namespace: prod
          manifests: ${{ steps.replace-version.outputs.directory }}/manifest.yaml
      - name: Post to a Slack channel
        if: ${{ contains(github.event.head_commit.message, '#deploy-to-prod') }}
        id: slack-prod
        uses: slackapi/slack-github-action@v1.23.0
        with:
          channel-id: '${{ secrets.DEPLOYMENT_CHANNEL_ID }}'
          slack-message: "Deploying web reader to prod : ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
